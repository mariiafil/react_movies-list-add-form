{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","validateForm","formErrors","rest","valid","Object","values","forEach","val","length","trim","patternUrl","NewMovie","state","isEmpty","handleInput","e","target","name","value","setState","handleSubmit","preventDefault","props","addMovie","prevState","object","match","handleFocus","handleBlur","this","onSubmit","cx","error","type","onChange","onBlur","onFocus","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b23a9943.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as cx from 'classnames';\n\nconst validateForm = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false);\n  });\n\n  Object.values(rest).forEach((val) => {\n    val.trim() === '' && (valid = false);\n  });\n\n  return valid;\n};\n/* eslint-disable-next-line */\nconst patternUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  static propTypes = {\n    addMovie: PropTypes.func.isRequired,\n  }\n\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    formErrors: {\n      title: '',\n      imgUrl: '',\n      imdbId: '',\n      imdbUrl: '',\n      isEmpty: false,\n    },\n\n  };\n\n  handleInput = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      formErrors,\n    } = this.state;\n\n    if (validateForm({\n      formErrors, title, imgUrl, imdbId, imdbUrl,\n    })) {\n      this.props.addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    } else {\n      this.setState((prevState) => {\n        const object = {};\n\n        if (title.trim().length < 3) {\n          object.title = 'minimum 3 characaters required';\n        }\n\n        if (imdbUrl.trim().length < 3) {\n          object.imdbUrl = 'minimum 3 characaters required';\n        }\n\n        if (imdbId.trim().length < 3) {\n          object.imdbId = 'minimum 3 characaters required';\n        }\n\n        if (!imgUrl.match(patternUrl)) {\n          object.imgUrl = 'not valid Url';\n        }\n\n        return {\n          formErrors: {\n            ...prevState.formErrors,\n            ...object,\n            isEmpty: true,\n          },\n        };\n      });\n    }\n  }\n\n  handleFocus = (e) => {\n    const { name } = e.target;\n    const { formErrors } = this.state;\n\n    if (formErrors[name].length > 0) {\n      this.setState(prevState => ({\n        formErrors: {\n          ...prevState.formErrors,\n          [name]: '',\n          isEmpty: false,\n        },\n      }));\n    }\n  }\n\n  handleBlur = (e) => {\n    const { value, name } = e.target;\n\n    if (name === 'title'\n      || name === 'imdbUrl'\n      || name === 'imdbId') {\n      if (value.trim().length < 3) {\n        this.setState(prevState => ({\n          formErrors: {\n            ...prevState.formErrors,\n            [name]: 'minimum 3 characaters required',\n          },\n        }));\n\n        return;\n      }\n    }\n\n    if (name === 'imgUrl') {\n      if (!value.match(patternUrl)) {\n        this.setState(prevState => ({\n          formErrors: {\n            ...prevState.formErrors,\n            [name]: 'not valid URL',\n          },\n        }));\n      }\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      formErrors,\n    } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        {formErrors.isEmpty && (\n          <span className=\"error__text\">\n            Some required fields are not valid\n          </span>\n        )}\n        <label>\n          Title:\n          <input\n            className={cx('input', { error: formErrors.title })}\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.title.length > 0 && (\n            <span className=\"error__text\">{formErrors.title}</span>\n          )}\n        </label>\n        <label>\n           Description:\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleInput}\n          />\n        </label>\n        <label>\n          Image URL:\n          <input\n            className={cx('input', { error: formErrors.imgUrl })}\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.imgUrl.length > 0 && (\n            <span className=\"error__text\">{formErrors.imgUrl}</span>\n          )}\n        </label>\n        <label>\n          Imdb URL:\n          <input\n            className={cx('input', { error: formErrors.imdbUrl })}\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.imdbUrl.length > 0 && (\n            <span className=\"error__text\">{formErrors.imdbUrl}</span>\n          )}\n        </label>\n        <label>\n          Imdb Id:\n          <input\n            className={cx('input', { error: formErrors.imdbId })}\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.imdbId.length > 0 && (\n            <span className=\"error__text\">{formErrors.imdbId}</span>\n          )}\n        </label>\n        <button className=\"button\" type=\"submit\">Add Movie</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}