{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","formValid","formErrors","rest","valid","Object","values","forEach","val","length","NewMovie","state","handleInput","e","target","name","value","setState","handleSubmit","preventDefault","props","addMovie","handleFocus","handleBlur","match","this","onSubmit","type","onChange","onBlur","onFocus","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23bbad4a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false);\n  });\n\n  Object.values(rest).forEach((val) => {\n    val === '' && (valid = false);\n  });\n\n  return valid;\n};\n\nexport class NewMovie extends Component {\n  static propTypes = {\n    addMovie: PropTypes.func.isRequired,\n  }\n\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    formErrors: {\n      title: '',\n      imgUrl: '',\n      imdbId: '',\n      imdbUrl: '',\n    },\n\n  };\n\n  handleInput = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    if (formValid(this.state)) {\n      this.props.addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  }\n\n  handleFocus = (e) => {\n    const { name } = e.target;\n    const { formErrors } = this.state;\n\n    if (formErrors[name].length > 0) {\n      formErrors[name] = ';';\n      this.setState({\n        formErrors,\n      });\n    }\n  }\n\n  handleBlur = (e) => {\n    const { value, name } = e.target;\n    const { formErrors } = this.state;\n\n    switch (name) {\n      case 'title':\n        formErrors.title\n          = value.length < 3 ? 'minimum 3 characaters required' : '';\n        break;\n      case 'imdbUrl':\n        formErrors.imdbUrl\n          = value.length < 3 ? 'minimum 3 characaters required' : '';\n        break;\n      case 'imdbId':\n        formErrors.imdbId\n          = value.length < 3 ? 'minimum 3 characaters required' : '';\n        break;\n      case 'imgUrl':\n        formErrors.imgUrl\n        /* eslint-disable-next-line */\n          = !value.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/)\n            ? 'not valid URL' : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors,\n    });\n  }\n\n  render() {\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      formErrors } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label>\n          Title:\n          <input\n            className={formErrors.title.length > 0 ? 'input error' : 'input'}\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.title.length > 0 && (\n            <span className=\"errorText\">{formErrors.title}</span>\n          )}\n        </label>\n        <label>\n           Description:\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleInput}\n          />\n        </label>\n        <label>\n          Image URL:\n          <input\n            className={formErrors.imgUrl.length > 0 ? 'input error' : 'input'}\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.imgUrl.length > 0 && (\n            <span className=\"errorText\">{formErrors.imgUrl}</span>\n          )}\n        </label>\n        <label>\n          Imdb URL:\n          <input\n            className={formErrors.imdbUrl.length > 0 ? 'input error' : 'input'}\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.imdbUrl.length > 0 && (\n            <span className=\"errorText\">{formErrors.imdbUrl}</span>\n          )}\n        </label>\n        <label>\n          Imdb Id:\n          <input\n            className={formErrors.imdbId.length > 0 ? 'input error' : 'input'}\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.imdbId.length > 0 && (\n            <span className=\"errorText\">{formErrors.imdbId}</span>\n          )}\n        </label>\n        <button className=\"button\" type=\"submit\">Add Movie</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}