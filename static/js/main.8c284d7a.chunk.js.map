{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","validateForm","formErrors","rest","valid","Object","values","forEach","val","length","NewMovie","state","isEmpty","handleInput","e","target","name","value","setState","handleSubmit","preventDefault","props","addMovie","prevState","handleFocus","handleBlur","match","this","errorTitle","cx","input","error","errorImdbId","errorImdbUrl","errorImgUrl","onSubmit","type","onChange","onBlur","onFocus","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"wxEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,0CCtBJK,EAAe,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAAeC,EAAW,8BAC5CC,GAAQ,EAUZ,OARAC,OAAOC,OAAOJ,GAAYK,SAAQ,SAACC,GACjCA,EAAIC,OAAS,IAAML,GAAQ,MAG7BC,OAAOC,OAAOH,GAAMI,SAAQ,SAACC,GACnB,KAARA,IAAeJ,GAAQ,MAGlBA,GAGIM,EAAb,2MAKEC,MAAQ,CACNzB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRE,WAAY,CACVhB,MAAO,GACPE,OAAQ,GACRY,OAAQ,GACRX,QAAS,GACTuB,SAAS,IAhBf,EAqBEC,YAAc,SAACC,GAAO,IAAD,EACKA,EAAEC,OAAlBC,EADW,EACXA,KAAMC,EADK,EACLA,MAEd,EAAKC,SAAL,eACGF,EAAOC,KAzBd,EA6BEE,aAAe,SAACL,GACdA,EAAEM,iBADkB,MAQhB,EAAKT,MALPzB,EAHkB,EAGlBA,MACAC,EAJkB,EAIlBA,YACAC,EALkB,EAKlBA,OACAC,EANkB,EAMlBA,QACAW,EAPkB,EAOlBA,OAGEC,EAAa,EAAKU,QACpB,EAAKU,MAAMC,SAAS,CAClBpC,QACAC,cACAC,SACAC,UACAW,WAGF,EAAKkB,SAAS,CACZhC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MAGV,EAAKkB,UAAS,SAAAK,GAAS,MAAK,CAC1BrB,WAAW,eACNqB,EAAUrB,WADL,CAERU,SAAS,SA3DnB,EAiEEY,YAAc,SAACV,GAAO,IACZE,EAASF,EAAEC,OAAXC,KACAd,EAAe,EAAKS,MAApBT,WAER,EAAKgB,UAAS,SAAAK,GAAS,MAAK,CAC1BrB,WAAW,eACNqB,EAAUrB,WADL,CAERU,SAAS,QAITV,EAAWc,GAAMP,OAAS,GAC5B,EAAKS,UAAS,SAAAK,GAAS,MAAK,CAC1BrB,WAAW,eACNqB,EAAUrB,WADL,eAEPc,EAAO,UAhFlB,EAsFES,WAAa,SAACX,GAAO,IAAD,EACMA,EAAEC,OAAlBE,EADU,EACVA,MAAOD,EADG,EACHA,KAEF,UAATA,GACU,YAATA,GACS,WAATA,GACCC,EAAMR,OAAS,GACjB,EAAKS,UAAS,SAAAK,GAAS,MAAK,CAC1BrB,WAAW,eACNqB,EAAUrB,WADL,eAEPc,EAAO,uCAMH,WAATA,IAEGC,EAAMS,MAAM,uKACf,EAAKR,UAAS,SAAAK,GAAS,MAAK,CAC1BrB,WAAW,eACNqB,EAAUrB,WADL,eAEPc,EAAO,wBA5GpB,wEAmHY,IAAD,EAQHW,KAAKhB,MANPzB,EAFK,EAELA,MACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,OACAC,EALK,EAKLA,QACAW,EANK,EAMLA,OACAE,EAPK,EAOLA,WAGI0B,EAAaC,IAAG,CACpBC,OAAO,EACPC,MAAO7B,EAAWhB,QAGd8C,EAAcH,IAAG,CACrBC,OAAO,EACPC,MAAO7B,EAAWF,SAGdiC,EAAeJ,IAAG,CACtBC,OAAO,EACPC,MAAO7B,EAAWb,UAGd6C,EAAcL,IAAG,CACrBC,OAAO,EACPC,MAAO7B,EAAWd,SAGpB,OACE,0BACEE,UAAU,OACV6C,SAAUR,KAAKR,cAEdjB,EAAWU,SACV,0BAAMtB,UAAU,eAAhB,sCAIF,wCAEE,2BACEA,UAAWsC,EACXQ,KAAK,OACLpB,KAAK,QACLC,MAAO/B,EACPmD,SAAUV,KAAKd,YACfyB,OAAQX,KAAKF,WACbc,QAASZ,KAAKH,cAEftB,EAAWhB,MAAMuB,OAAS,GACzB,0BAAMnB,UAAU,eAAeY,EAAWhB,QAG9C,8CAEE,2BACEI,UAAU,QACV8C,KAAK,OACLpB,KAAK,cACLC,MAAO9B,EACPkD,SAAUV,KAAKd,eAGnB,4CAEE,2BACEvB,UAAW4C,EACXE,KAAK,OACLpB,KAAK,SACLC,MAAO7B,EACPiD,SAAUV,KAAKd,YACfyB,OAAQX,KAAKF,WACbc,QAASZ,KAAKH,cAEftB,EAAWd,OAAOqB,OAAS,GAC1B,0BAAMnB,UAAU,eAAeY,EAAWd,SAG9C,2CAEE,2BACEE,UAAW2C,EACXG,KAAK,OACLpB,KAAK,UACLC,MAAO5B,EACPgD,SAAUV,KAAKd,YACfyB,OAAQX,KAAKF,WACbc,QAASZ,KAAKH,cAEftB,EAAWb,QAAQoB,OAAS,GAC3B,0BAAMnB,UAAU,eAAeY,EAAWb,UAG9C,0CAEE,2BACEC,UAAW0C,EACXI,KAAK,OACLpB,KAAK,SACLC,MAAOjB,EACPqC,SAAUV,KAAKd,YACfyB,OAAQX,KAAKF,WACbc,QAASZ,KAAKH,cAEftB,EAAWF,OAAOS,OAAS,GAC1B,0BAAMnB,UAAU,eAAeY,EAAWF,SAG9C,4BAAQV,UAAU,SAAS8C,KAAK,UAAhC,kBAjOR,GAA8BI,a,QCZjBC,EAAb,2MACE9B,MAAQ,CACNf,OAAQ8C,GAFZ,EAKEpB,SAAW,SAACxB,GACV,EAAKoB,UAAS,SAAAK,GAAS,MAAK,CAC1B3B,OAAO,GAAD,mBAAM2B,EAAU3B,QAAhB,CAAwBE,SAPpC,wEAWY,IACAF,EAAW+B,KAAKhB,MAAhBf,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUgC,SAAUK,KAAKL,iBApBnC,GAAyBkB,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8c284d7a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst validateForm = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false);\n  });\n\n  Object.values(rest).forEach((val) => {\n    val === '' && (valid = false);\n  });\n\n  return valid;\n};\n\nexport class NewMovie extends Component {\n  static propTypes = {\n    addMovie: PropTypes.func.isRequired,\n  }\n\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    formErrors: {\n      title: '',\n      imgUrl: '',\n      imdbId: '',\n      imdbUrl: '',\n      isEmpty: false,\n    },\n\n  };\n\n  handleInput = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (validateForm(this.state)) {\n      this.props.addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    } else {\n      this.setState(prevState => ({\n        formErrors: {\n          ...prevState.formErrors,\n          isEmpty: true,\n        },\n      }));\n    }\n  }\n\n  handleFocus = (e) => {\n    const { name } = e.target;\n    const { formErrors } = this.state;\n\n    this.setState(prevState => ({\n      formErrors: {\n        ...prevState.formErrors,\n        isEmpty: false,\n      },\n    }));\n\n    if (formErrors[name].length > 0) {\n      this.setState(prevState => ({\n        formErrors: {\n          ...prevState.formErrors,\n          [name]: '',\n        },\n      }));\n    }\n  }\n\n  handleBlur = (e) => {\n    const { value, name } = e.target;\n\n    if (name === 'title'\n      || name === 'imdbUrl'\n      || name === 'imdbId') {\n      if (value.length < 3) {\n        this.setState(prevState => ({\n          formErrors: {\n            ...prevState.formErrors,\n            [name]: 'minimum 3 characaters required',\n          },\n        }));\n      }\n    }\n\n    if (name === 'imgUrl') {\n      /* eslint-disable-next-line */\n      if (!value.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/)) {\n        this.setState(prevState => ({\n          formErrors: {\n            ...prevState.formErrors,\n            [name]: 'not valid URL',\n          },\n        }));\n      }\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      formErrors,\n    } = this.state;\n\n    const errorTitle = cx({\n      input: true,\n      error: formErrors.title,\n    });\n\n    const errorImdbId = cx({\n      input: true,\n      error: formErrors.imdbId,\n    });\n\n    const errorImdbUrl = cx({\n      input: true,\n      error: formErrors.imdbUrl,\n    });\n\n    const errorImgUrl = cx({\n      input: true,\n      error: formErrors.imgUrl,\n    });\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        {formErrors.isEmpty && (\n          <span className=\"error__text\">\n            Some required fields are not valid\n          </span>\n        )}\n        <label>\n          Title:\n          <input\n            className={errorTitle}\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.title.length > 0 && (\n            <span className=\"error__text\">{formErrors.title}</span>\n          )}\n        </label>\n        <label>\n           Description:\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleInput}\n          />\n        </label>\n        <label>\n          Image URL:\n          <input\n            className={errorImgUrl}\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.imgUrl.length > 0 && (\n            <span className=\"error__text\">{formErrors.imgUrl}</span>\n          )}\n        </label>\n        <label>\n          Imdb URL:\n          <input\n            className={errorImdbUrl}\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.imdbUrl.length > 0 && (\n            <span className=\"error__text\">{formErrors.imdbUrl}</span>\n          )}\n        </label>\n        <label>\n          Imdb Id:\n          <input\n            className={errorImdbId}\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleInput}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n          />\n          {formErrors.imdbId.length > 0 && (\n            <span className=\"error__text\">{formErrors.imdbId}</span>\n          )}\n        </label>\n        <button className=\"button\" type=\"submit\">Add Movie</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}